#                     _       _
#  _______  ___  _ __(_)_ __ ( )___
# |_  / _ \/ _ \| '__| | '_ \|// __|
#  / /  __/ (_) | |  | | | | | \__ \
# /___\___|\___/|_|  |_|_| |_| |___/
#   _                                          __
#  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
# (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
# This is the personal .tmux.conf of Xandor Schiefer.

# The MIT License (MIT) {{{

# Copyright â“’ 2016 Xandor Schiefer

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# }}}

# Set some sensible defaults
set-option -g @plugin 'tmux-plugins/tmux-sensible'

# Key binds {{{

# Set the prefix-key to C-Space, which is more usable
unbind C-b
set-option -g prefix C-Space

# Use VI keys
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection

# Make working with nested sessions easier
bind Space send-prefix

# Allow for moving around in nested sessions
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'
bind C-l send-keys 'C-l'
bind C-\ send-keys 'C-\\'

# Restore clear screen functionality with Alt+L
bind -n M-l send-keys 'C-l'
# Nested session version
bind M-l send-keys 'M-l'

# Easier split pane creation
unbind '"'
unbind '%'
bind-key '|' split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key '-' split-window -v -c "#{pane_current_path}"
bind-key '_' split-window -fv -c "#{pane_current_path}"

# Move windows
bind-key -r '<' swap-window -t -1
bind-key -r '>' swap-window -t +1

# Start new windows in same dir as current
bind c new-window -c '#{pane_current_path}'

# Show session selector
bind o choose-tree -s -f '#{?session_attached,0,1}'

# Join panes with other windows
bind j command-prompt -p 'join pane from:' 'join-pane -s "%%"'
bind s command-prompt -p 'send pane to:' 'join-pane -t "%%"'

# Easy creation of new session
bind * command-prompt -p 'new session:' 'new-session -s "%%"'

# Vim-tmux keybind integration
set-option -g @plugin 'christoomey/vim-tmux-navigator'

# Better session handling keybinds
set-option -g @plugin 'tmux-plugins/tmux-sessionist'

# Open files and URLs easily
set-option -g @plugin 'tmux-plugins/tmux-open'

# }}}

# Behaviour {{{

# Tmux window names
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{pane_title}'

# Terminal window names
set-option -g set-titles on
set-option -g set-titles-string '#{window_name}'

# Update the status line more quickly
set-option -g status-interval 1

# Clipboard setup
set-option -g set-clipboard on
set-option -g @yank_action 'copy-pipe'
set-option -g @plugin 'tmux-plugins/tmux-yank'

# Better searching
set-option -g @plugin 'tmux-plugins/tmux-copycat'

# Start windows and panes at 1 and not 0
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Set correct TERM
set-option -g default-terminal 'tmux'
set-option -g update-environment 'DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
if '[ "${TERM#*256color}" = "$TERM" ] || [ "$TERM" = xterm-kitty ] || [ "$TERM" = fbterm ]' 'set-option -g default-terminal tmux-256color'

# Mouse functionality
set-option -g mouse on
set-option -g @plugin 'NHDaly/tmux-better-mouse-mode'
set-option -g @scroll-without-changing-pane 'on'
set-option -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# Resurrect sessions
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @resurrect-capture-pane-contents 'on'
set-option -g @resurrect-strategy-vim 'session'
set-option -g @resurrect-strategy-nvim 'session'

# Continual session saving
set-option -g @plugin 'tmux-plugins/tmux-continuum'
# https://github.com/tmux-plugins/tmux-resurrect/issues/57
# https://github.com/tmux-plugins/tmux-resurrect/pull/222
# set-option -g @continuum-boot 'on'
# set-option -g @continuum-restore 'on'
set-option -g @continuum-save-interval '5'

# }}}

# Appearance {{{

# Source Powerline
PATH="$HOME/.local/bin:$PATH"
run-shell 'powerline-daemon -q || [ $? = 1 ]'
run-shell 'tmux source "$(python -m site --user-site)/powerline/bindings/tmux/powerline.conf"'

# Pane border colours
set-option -g pane-border-style 'fg=black'
set-option -g pane-active-border-style 'fg=brightblue'

# "Dim" inactive pane
set-option -g window-style 'fg=brightgreen'
set-option -g window-active-style 'fg=brightblue'

# }}}

# Initialize TMUX plugin manager (keep this at the very end)
set-option -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'

# vim: set foldmethod=marker foldlevel=0 foldcolumn=4 textwidth=78:
