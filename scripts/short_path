#!/bin/sh
set -e

path=$(readlink -f "$1")

find_up() {
	_path=$1
	shift 1

	while [ "$_path" != / ]; do
		find "$_path" -maxdepth 1 -mindepth 1 "$@"
		_path=$(readlink -f "$_path"/..)
	done
}

find_project_root() {
	_path=$1

	# shellcheck disable=SC2043
	for project_root_file in .git; do
		file=$(find_up "$_path" -name "$project_root_file" | head -n 1)
		if [ -n "$file" ]; then
			dirname "$(readlink -f "$file")"
			break
		fi
	done
}

truncate_path() {
	_path=$1
	project_root=$(find_project_root "$_path")

	if [ -n "$project_root" ]; then
		relativepath=$(realpath --relative-to="$project_root" "$_path")
		basepath=$(basename "$project_root")
		if [ "$relativepath" = "." ]; then
			_path="$basepath"
		else
			_path="$basepath/$relativepath"
		fi
	elif [ "$_path" = "$HOME" ]; then
		_path="~"
	elif [ "${_path#$HOME/}" != "$_path" ]; then
		relativepath="${_path#$HOME/}"
		# shellcheck disable=SC2088
		_path="~/$relativepath"
	fi

	printf %s\\n "$_path"
}

abridge_path() {
	_path=$1
	printf %s\\n "$_path" | sed -E 's|^(/?[^/]+)(/[^/]+)+(/[^/]+/[^/]+)$|\1/â€¦\3|'
}

abridge_path "$(truncate_path "$path")"
